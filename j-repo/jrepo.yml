---
- name: Install Jenkins
  hosts: all
  become: true
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install curl
      apt:
        name: curl
        state: present

    - name: Install gnupg
      apt:
        name: gnupg
        state: present

    - name: Add an apt signing key for Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add apt repository for stable version
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
        state: present

    - name: Install docker and its dependecies
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - docker.io
      notify:
        - docker status

    - name: Add vagrant user to docker group
      user:
        name: vagrant
        group: docker
        append: true

    - name: Adding SSL
      shell: cd /home/vagrant &&  mkdir -p certs && openssl req -new -newkey rsa:4096 -nodes -sha256 -keyout certs/domain.key -x509 -days 365 -out certs/domain.crt -subj "/C=US/ST=Denial/L=Springfield/O=Dis/CN=192.168.56.62"


    - name: Create Docker Registry
      docker_container:
        name: registry
        image: registry:2
        state: started
        restart_policy: unless-stopped
        volumes:
          - /etc/docker/registry:/var/lib/registry
          - /home/vagrant/certs:/certs
        env:
          REGISTRY_HTTP_TLS_CERTIFICATE: "/certs/domain.crt"
          REGISTRY_HTTP_TLS_KEY: "/certs/domain.key"
        published_ports:
          - "5000:5000"

    - name: Add Jenkins APT keyring
      shell: "curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | sudo tee /usr/share/keyrings/jenkins-keyring.asc"
      args:
        executable: /bin/bash

    - name: Add Jenkins APT repository
      shell: sudo sh -c 'echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
      args:
        executable: /bin/bash

    - name: Install Java
      apt:
        name: openjdk-11-jre
        state: present

    - name: Update package cache
      apt:
        update_cache: yes

    - name: Install Jenkins
      apt:
        name: jenkins
        state: present

    - name: Disable jenkins setup wizard
      lineinfile:
        path: /etc/default/jenkins
        line: JAVA_ARGS="-Djenkins.install.runSetupWizard=false"
          
    - name: Create groovy init directory 
      file:
        path: /var/lib/jenkins/init.groovy.d
        state: directory
        mode: '0777'

    - name: Place basic security script in groovy directory
      copy:
        src: "{{ playbook_dir }}/basic-security.groovy"
        dest: /var/lib/jenkins/init.groovy.d/basic-security.groovy
        mode: '0777'

    - name: Start Jenkins service
      service:
        name: jenkins
        state: started
        enabled: yes

    - name: Include wait for jenkins task
      include_tasks: jenkins_check.yml

    - name: Download Plugins script into vagrant home directory
      copy:
        src: "{{ playbook_dir }}/plugins.sh"
        dest: /home/vagrant/
        mode: '0777'

    - name: Restart jenkins service 
      service:
          name: jenkins
          state: restarted

    - name: Include wait for jenkins task
      include_tasks: jenkins_check.yml

    - name: Download jenkins cli into vagrant home directory 
      get_url:
        url: http://localhost:8080/jnlpJars/jenkins-cli.jar
        dest: /home/vagrant
        mode: '0777'
      retries: 5
      delay: 5
      register: result      
      until: result is succeeded

    - name: Run plugins scripts
      shell: /home/vagrant/plugins.sh
      args:
        executable: /bin/bash
      register: plugins_script

    - name: Show installed plugins
      debug:
        var: plugins_script.stdout

    - name: Add jenkins user to docker group
      become: true
      shell: usermod -a -G docker jenkins

    - name: Restart jenkins service 
      service:
          name: jenkins
          state: restarted

    - name: Add jenkinsfile
      copy:
        src: "{{ playbook_dir }}/config.xml"
        dest: /home/vagrant/config.xml
        mode: '0777'

    - name: Check if job exists.
      stat:
        path: /var/lib/jenkins/jobs/build_push_deploy/config.xml
      register: job

    - name: create jenkins jobs with xml files
      become: true
      when: not job.stat.exists
      shell: "java -jar jenkins-cli.jar -s http://localhost:8080 -auth admin:admin create-job build_push_deploy < config.xml"
      with_items: jenkins_jobs
    
  handlers:
    - name: docker status
      service: name=docker state=started

